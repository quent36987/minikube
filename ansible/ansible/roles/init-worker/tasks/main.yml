---
- name: Install Docker
  apt:
    name: docker.io
    state: present

- name: Update apt package index
  apt:
    update_cache: yes

- name: Update apt package index and install required packages for Kubernetes repo
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg

- name: Download the public signing key for Kubernetes package repositories
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
    dest: /tmp/kubernetes-apt-key.gpg

- name: Add the Kubernetes apt repository key
  command: "sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/kubernetes-apt-key.gpg /tmp/kubernetes-apt-key.gpg"

- name: Add the Kubernetes apt repository
  blockinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    block: |
      deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-apt-key.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
    create: yes

- name: Update apt package index, install Kubernetes packages, and pin their version
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - kubelet
    - kubeadm
    - kubectl
  register: kubernetes_packages

- name: Hold Kubernetes packages to prevent automatic updates
  command: "sudo apt-mark hold {{ item }}"
  loop: "{{ kubernetes_packages.results | map(attribute='item') | list }}"


- name: Join worker nodes to the cluster
  command: "{{ hostvars['master']['kubeadm_output']['stdout_lines'][0] }}"
  when: "'kubeadm join' in hostvars['master']['kubeadm_output']['stdout']"